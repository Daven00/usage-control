name: ucs

on:
  push:
    branches:
      - sifis-home

jobs:

  # Build and test the applications with multiple Java versions
  build-and-test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [
          '8.0.x',
#          '9.0.x',
#          '11.0.x',
#          '12.0.x',
#          '13.0.x',
#          '14.0.x',
#          '15.0.x',
        ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          architecture: x64
          distribution: 'zulu'
          cache: 'maven'

      - name: Package UCS Modules
        run: |
          ./scripts/build-ucs.sh
#          ./code-coverage.sh

#      - name: Deploy Jacoco code coverage reports to gh-pages
#        uses: JamesIves/github-pages-deploy-action@v4
#        if: ${{ matrix.java-version == '8.0.x' }}
#        with:
#          clean: true
#          folder: jacoco
#          target-folder: reports
#          branch: gh-pages

  
  # Build files necessary for building Docker Images (Dockerfiles and Contexts)
  build-for-docker:

    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 8.0.x
          architecture: x64
          distribution: 'zulu'
          cache: 'maven'
          
      - name: Prepare Dockerfiles and files for Contexts
        run: |
          ./scripts/build-for-docker.sh
             
      - name: Upload artifacts for Docker Image building
        uses: actions/upload-artifact@v3
        with:
          name: files-for-docker
          retention-days: 5
          if-no-files-found: error
          path: |
            ./docker-build/*  

  # Build multiarch Docker Images and push as GitHub Packages
  docker-image-push:

    if: ${{ github.repository == 'sifis-home/usage-control' }}
    needs: [build-and-test, build-for-docker]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts for Docker Image building
        uses: actions/download-artifact@v3
        with:
          name: files-for-docker

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub container registry (ghcr.io)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image (Usage Control Engine)
        uses: docker/build-push-action@v4
        with:
          context: ucs/.
          file: ucs/Dockerfile-UCSDht
          platforms: linux/amd64, linux/arm64, linux/arm
          push: true
          tags: ghcr.io/sifis-home/usage-control-engine:latest
          outputs: type=registry, annotation-index.org.opencontainers.image.description=usage-control - Usage Control Engine communicating through the DHT via websockets

      - name: Build and push image (PEP)
        uses: docker/build-push-action@v4
        with:
          context: ucs/.
          file: ucs/Dockerfile-PEPDht
          platforms: linux/amd64, linux/arm64, linux/arm
          push: true
          tags: ghcr.io/sifis-home/pep-java:latest
          outputs: type=registry, annotation-index.org.opencontainers.image.description=usage-control - PEP communicating with the Usage Control Engine through the DHT via websockets